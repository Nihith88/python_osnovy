"""1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе."""

my_list = [None, 432, True, [1, 3, 5, 7], 'average', -3.223, ('cyan', 'magenta', 'yellow', 'black'),
           {'name': 'Andy'}]
print([type(i) for i in my_list])

"""2. Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1, 
2 и 3 и т. д. При нечётном количестве элементов последний сохранить на своём месте. Для заполнения списка элементов 
нужно использовать функцию input()."""

list_len = int(input("Введите длину списка:  "))
old_list = []
new_list = []
for i in range(0, list_len):
    old_list.append(input("Введите элемент списка:  "))
if list_len % 2 == 0:
    for el in range(0, list_len, 2):
        j = list_len-el
        old_list[-j], old_list[-j+1] = old_list[-j+1], old_list[-j]
    print(old_list)
else:
    for el in range(0, list_len-1, 2):
        j = list_len-el
        old_list[-j], old_list[-j+1] = old_list[-j+1], old_list[-j]
    print(old_list)

"""3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц 
(зима, весна, лето, осень). Напишите решения через list и dict."""

#  Через list:
times = ["зима", "весна", "лето", "осень"]
month = int(input("Введите порядковый номер месяца:  "))
if month in [1, 2, 12]:
    print(f"Время года: {times[0]}")
elif month in [3, 4, 5]:
    print(f"Время года: {times[1]}")
elif month in [6, 7, 8]:
    print(f"Время года: {times[2]}")
elif month == [9, 10, 11]:
    print(f"Время года: {times[3]}")
else:
    print("Некорректный номер месяца")

# Через dict

times_dict = {"зима": [1, 2, 12], "весна": [3, 4, 5], "лето": [6, 7, 8], "осень": [9, 10, 11]}
for i in times_dict.keys():
    if month in times_dict[i]:
        print(f"Время года: {i}")


"""4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки. 
Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове."""

usr_string = input("Введите строку слов, разделенных пробелами:  ")
elem = 0
for word in usr_string.split():
    elem += 1
    print(f"{elem} - {word[0:10]}")

"""
5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. У пользователя 
нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент
с тем же значением должен разместиться после них.
"""

rate_list = [7, 4, 3, 3, 1]
while True:
    rate_list.append(int(input("Введите новый объект рейтинга:  ")))
    rate_list.sort(reverse=True)
    print(rate_list)
    action = input("Продолжить? 1 - да, 0 - нет ")
    if action == '0':
        break